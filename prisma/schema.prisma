generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./database.db"
}

model User {
  id               Int            @id @default(autoincrement())
  name             String
  login            String         @unique
  password         String
  roleId           Int
  createdAt        DateTime       @default(now())
  forumAccounts    ForumAccount[]
  invitesCreated   InviteCode[]   @relation("createdInvite")
  activeInvite     InviteCode?    @relation("activeInvite")
  templatesCreated Template[]
  forumFields      ForumFields[]  @relation("forumFields")
  role             Role           @relation(fields: [roleId], references: [id])

  @@index([roleId])
}

model Permission {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  roles     Role[]   @relation("PermissionToRole")
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  createdAt   DateTime     @default(now())
  users       User[]
  permissions Permission[] @relation("PermissionToRole")
  InviteCodes InviteCode[] @relation("roleId")
}

model InviteCode {
  id          Int      @id @default(autoincrement())
  code        String
  status      String
  activatedId Int?     @unique
  createdId   Int
  roleId      Int
  createdAt   DateTime @default(now())
  created     User     @relation("createdInvite", fields: [createdId], references: [id])
  activated   User?    @relation("activeInvite", fields: [activatedId], references: [id])
  role        Role     @relation("roleId", fields: [roleId], references: [id], onDelete: Cascade)
}

model Template {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  code        String
  createdId   Int
  elements    String
  createdAt   DateTime @default(now())
  created     User     @relation(fields: [createdId], references: [id], onDelete: Cascade)
}

model ForumAccount {
  id        Int      @id @default(autoincrement())
  login     String
  password  String
  createdId Int
  active    Boolean
  sid       String
  createdAt DateTime @default(now())
  created   User     @relation(fields: [createdId], references: [id], onDelete: Cascade)
}

model ForumFields {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id], name: "forumFields", onDelete: Cascade)
  userId   Int
  elements String
}
